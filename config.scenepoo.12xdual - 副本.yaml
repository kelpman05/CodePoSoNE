# YAML语法参考：
#  https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html

# 运行程序时日志打印级别
log_level: debug

# 所有节点配置在此对象中。对象每个key是一个Node的ID，为32位无符号整数范围内的整数。
# 值含义见各项注释。
# 在微网内所有节点上，本项配置应该保持一致，否则可能导致未知问题。
nodes:
    1:
        # 传输层协议，目前只支持tcpv1
        transport: tcpv1
        # 节点IP地址和端口号，IP地址为字符串，端口号为整数
        ip: 127.0.0.1
        port: 11111
        # 节点公私钥文件路径。如果是相对路径，则读取时相对配置文件所在路径搜索。
        # 除本节点（local node）外，其他节点只需要公钥即可（理论上也拿不到其他节点的私钥）。
        # 但为了实验方便，所有节点都可以配置私钥路径，读取时除了本节点，程序不会尝试读取或
        # 验证其他节点的私钥，即便私钥文件不存在也可执行。
        private_key_file: "./tests/test_keys/node1.key"
        public_key_file: "./tests/test_keys/node1.pub"
        # 节点是否为代表
        is_delegate: no
        # 节点是否为普通节点
        is_normal: yes
        hub: "./tests/data/HUB1.xlsx"
    2:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11112
        private_key_file: "./tests/test_keys/node2.key"
        public_key_file: "./tests/test_keys/node2.pub"
        is_delegate: no
        is_normal: yes
        hub: "./tests/data/HUB2.xlsx"
    3:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11113
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: no
        is_normal: yes
        hub: "./tests/data/HUB3.xlsx"
    4:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11114
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: no
        is_normal: yes
        hub: "./tests/data/HUB4.xlsx"
    5:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11115
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: no
        is_normal: yes
        hub: "./tests/data/HUB5.xlsx"
    6:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11116
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: no
        is_normal: yes
        hub: "./tests/data/HUB6.xlsx"
    7:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11117
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: no
        is_normal: yes
        hub: "./tests/data/HUB7.xlsx"
    8:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11118
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: yes
        is_normal: yes
        hub: "./tests/data/HUB8.xlsx"
        leader_evil:
            # 作恶1 配置follower_error
            # 作恶2 配置follower_ignore
            # 作恶3 配置follower_feasible
            # 作恶4 配置follower_error 和 follower_collusion
            # 不发送给从节点
            follower_ignore: [12]
            # 给从节点发送错误姐
            follower_error: [8,10,11]
            # 给从节点发送不是最优解的可行解
            follower_feasible: []
            # 从代表串谋者，会直接发送代表发送过来的结果，而不会比较最优解
            follower_collusion: []

    9:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11119
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: yes
        is_normal: yes
        hub: "./tests/data/HUB9.xlsx"
        #leader_evil:
            # 从代表串谋者，会直接发送代表发送过来的结果，而不会比较最优解
            #follower_trick_ignore: [10,11,12]
            
    10:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11120
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: yes
        is_normal: yes
        hub: "./tests/data/HUB10.xlsx"
        leader_evil:
            # 从代表串谋者，会直接发送代表发送过来的结果，而不会比较最优解
            follower_trick_error: [9]
            follower_trick_ignore: [11,12]
    11:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11121
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: yes
        is_normal: yes
        hub: "./tests/data/HUB11.xlsx"
    12:
        transport: tcpv1
        ip: 127.0.0.1
        port: 11122
        private_key_file: "./tests/test_keys/node3.key"
        public_key_file: "./tests/test_keys/node3.pub"
        is_delegate: yes
        is_normal: yes
        hub: "./tests/data/HUB12.xlsx"  

# 场景配置，微网内各节点该项配置应相同。
scene:
    # 微网建立后需要运行的场景类路径，路径使用Python导入规范命名
    class: distributed_consensus.scene.scene_type_poo.MultiEnergyPoo
    # 创建场景类实例时需要传入的参数。程序使用keyword方式传参，因此参数顺序并不重要。
    params:
        final_round: 2000
        round_timeout_sec: 50.0
        normal_round_timeout_sec: 3000.0
        round_end_cache: "./tests/cache/round_end.txt"
        init_end_cache: "./tests/cache/init_end.txt"
        ptry: "./tests/ptry"  

# 传输层参数
# key为需要配置的传输层（目前只支持tcpv1），值为该层的控制参数
transport:
    tcpv1:
        # 微网建立超时时间。假设在改时间过期前，微网中所有节点均能建立连接
        micronet_init_sec: 10.0
